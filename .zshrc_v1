# If you come from bash you might have to change your $PATH.

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

ZSH_THEME="sunrise"
plugins=(git zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"

# PROMPT
# force_color_prompt=yes
# exitstatus()
# {
#     RETURN=$?
#     if [[ ${RETURN} == 0 ]]; then
#         echo ""
#     else
#         echo "\$${RETURN} "
#     fi
# }
#
autoload -U colors && colors
setopt promptsubst

start_gray_background='%K{254}'
end_background='%k'
# exitstatus_ps1='%F{red}%F{black}$(echo $?)%f%k'
exitstatus_ps1='%{$fg_bold[red]%}%(?..%? )%{$reset_color%}'
time_date_ps1='%B%F{green}%D{%H:%M:%S %d-%m-%y}'
dir_ps1='%U%F{blue}`pwd`%E%k%u'
end_ps1='%F{cyan}> %b%f'
newline=$'\n'
export PROMPT="$exitstatus_ps1$start_gray_background$time_date_ps1 $dir_ps1$end_background${newline}$end_ps1"

# start_gray_background='%K{254}'
# end_background='%k'
# exitstatus_ps1='%K{red}%F{black}$(exitstatus)%f%k'
# time_date_ps1='%B%F{green}%D{%H:%M:%S %d-%m-%y}'
# dir_ps1='%U%F{blue}`pwd`%E%k%u'
# end_ps1='%F{cyan}> %b%f'
# newline=$'\n'
# export PROMPT="$exitstatus_ps1$start_gray_background$time_date_ps1 $dir_ps1$end_background${newline}$end_ps1"


# Auto run fzf
source ~/.fzf.zsh

# python
alias p3='ipython3'
alias pylint='pylint --max-line-length=100'
alias pylint3='/home/aandrukhovich/snap/pylint3 --max-line-length=100'

# tmux aliases
alias ta='tmux a'
alias tl='tmux list-sessions'

# vim
export EDITOR="vim"


# Ubuntu alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Auto change directory
setopt AUTO_CD

# Save timestamp, uet and elapsed time of command in .zsh_history
# setopt EXTENDED_HISTORY
SAVEHIST=50000
HISTSIZE=20000
# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY
# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY

# expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST 
# do not store duplications
setopt HIST_IGNORE_DUPS
#ignore duplicates when searching
setopt HIST_FIND_NO_DUPS
# removes blank lines from history
setopt HIST_REDUCE_BLANKS


# Enable zsh correction
setopt CORRECT
setopt CORRECT_ALL

# Enable zsh completion
autoload -Uz compinit && compinit


# Enable extended globbing (ls *.(sh|config))
autoload extendedglob


# ls aliases
alias llsd='ls -ld *(-/DN)'
alias lsd='ls -ld */'
alias lt='l -tr'
alias llt='ls -alFtr'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -l'

# more informative less
alias less='less -M'


# auto reconnect
alias wget='wget -c'


# comments with #
setopt interactive_comments


# copy-paste
alias -g xcopy='xclip -selection clipboard'
alias -g xpaste='xclip -selection clipboard -o'


# Rust-lang
export PATH="$HOME/.cargo/bin:$PATH"
alias cb="cargo build"
alias cr="cargo run"

alias vim="nvim"

# Vim-mode
export KEYTIMEOUT=1


# mac os related
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# export PATH=$PATH:~/.vim/compiler
export PATH=/opt/homebrew/bin:$PATH

# pip3 python bin to path
# export PATH=$PATH:$HOME/Library/Python/3.8/bin

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:/opt/homebrew/opt/llvm/bin:
# export PATH=$PATH:$HOME/soft/miniforge3/bin/conda


alias bat="bat --theme=OneHalfLight"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/Users/aa/soft/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/Users/aa/soft/miniforge3/etc/profile.d/conda.sh" ]; then
#         . "/Users/aa/soft/miniforge3/etc/profile.d/conda.sh"
#     else
#         export PATH="/Users/aa/soft/miniforge3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# <<< conda initialize <<<
